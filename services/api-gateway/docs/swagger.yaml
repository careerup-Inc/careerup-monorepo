basePath: /
definitions:
  handler.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handler.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  handler.LoginResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/handler.User'
    type: object
  handler.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: password123
        minLength: 8
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  handler.UpdateUserRequest:
    properties:
      first_name:
        example: John
        type: string
      hometown:
        example: New York
        type: string
      interests:
        example:
        - '[''AI'''
        - ' ''Machine Learning'']'
        items:
          type: string
        type: array
      last_name:
        example: Doe
        type: string
    type: object
  handler.User:
    properties:
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      hometown:
        example: New York
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      interests:
        example:
        - '[''AI'''
        - ' ''Machine Learning'']'
        items:
          type: string
        type: array
      last_name:
        example: Doe
        type: string
    type: object
  handler.ValidateTokenRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - token
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the CareerUP API server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: CareerUP API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /api/v1/auth/validate:
    post:
      consumes:
      - application/json
      description: Validate an authentication token
      parameters:
      - description: Token to validate
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ValidateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Validate token
      tags:
      - auth
  /api/v1/profile:
    get:
      description: Get the current authenticated user's profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get current user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update the current authenticated user's profile
      parameters:
      - description: Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update current user
      tags:
      - user
  /api/v1/ws:
    get:
      description: WebSocket endpoint for real-time chat
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: WebSocket chat
      tags:
      - chat
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
