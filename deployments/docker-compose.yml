services:
  # API Gateway
  api-gateway:
    build:
      context: ../services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVICE_ADDR=auth-core:8081
      - CHAT_SERVICE_ADDR=chat-gateway:8082
    depends_on:
      - auth-core
      - chat-gateway

  # Auth Service
  auth-core:
    build:
      context: ../services/auth-core
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/careerup
      - SPRING_DATASOURCE_USERNAME=careerup
      - SPRING_DATASOURCE_PASSWORD=careerup
    depends_on:
      - postgres

  # Chat Gateway
  chat-gateway:
    build:
      context: ../services/chat-gateway
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - LLM_SERVICE_ADDR=llm-gateway:9090
    depends_on:
      - llm-gateway

  # LLM Gateway
  llm-gateway:
    build:
      context: ../services/llm-gateway
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}

  # Avatar Service
  avatar-service:
    build:
      context: ../services/avatar-service
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      - VROID_HUB_API_KEY=${VROID_HUB_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

  # Recommendation Service
  rec-service:
    build:
      context: ../services/rec-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/careerup
      - QUARKUS_DATASOURCE_USERNAME=careerup
      - QUARKUS_DATASOURCE_PASSWORD=careerup
    depends_on:
      - postgres

  # Notification Service
  notification:
    build:
      context: ../services/notification
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis

  # PostgreSQL
  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=careerup
      - POSTGRES_PASSWORD=careerup
      - POSTGRES_DB=careerup
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Observability Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  tempo:
    image: grafana/tempo:latest
    ports:
      - "3200:3200"
      - "4317:4317"
      - "4318:4318"

volumes:
  postgres_data:
  redis_data: 