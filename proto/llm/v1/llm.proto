syntax = "proto3";

package llm.v1;

// Define appropriate options based on your project structure
option go_package = "github.com/careerup-Inc/careerup-monorepo/proto/llm/v1;llmv1";

service LLMService {
  // GenerateStream streams responses from the LLM.
  rpc GenerateStream(GenerateStreamRequest) returns (stream GenerateStreamResponse);
  // GenerateWithRAG streams RAG-augmented responses from the LLM.
  rpc GenerateWithRAG(GenerateWithRAGRequest) returns (stream GenerateWithRAGResponse);
  
  // Admin endpoints for dynamic document management
  rpc IngestDocument(IngestDocumentRequest) returns (IngestDocumentResponse);
  rpc CreateCollection(CreateCollectionRequest) returns (CreateCollectionResponse);
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse);
  rpc DeleteCollection(DeleteCollectionRequest) returns (DeleteCollectionResponse);
}

message GenerateStreamRequest {
  string prompt = 1;
  string user_id = 2; // Optional: for context/personalization
  string conversation_id = 3; // Optional: for context/history
}

message GenerateStreamResponse {
  string token = 1; // A single token chunk
  // Optionally add error information if needed at the token level
  // string error = 2;
}

message GenerateWithRAGRequest {
  string prompt = 1;
  string user_id = 2;
  string conversation_id = 3;
  // Optionally, specify a RAG collection or domain
  string rag_collection = 4;
  // Optionally, enable/disable adaptive RAG features
  bool adaptive = 5;
}

message GenerateWithRAGResponse {
  string token = 1;
  // Optionally add error or metadata fields
}

// Admin endpoint messages for dynamic document management
message IngestDocumentRequest {
  string content = 1;
  string collection = 2;
  map<string, string> metadata = 3;
  string document_id = 4; // Optional: if not provided, auto-generated
}

message IngestDocumentResponse {
  string document_id = 1;
  bool success = 2;
  string message = 3;
  int32 chunks_created = 4;
}

message CreateCollectionRequest {
  string collection_name = 1;
  map<string, string> metadata = 2;
}

message CreateCollectionResponse {
  bool success = 1;
  string message = 2;
  string collection_name = 3;
}

message ListCollectionsRequest {
  // Empty for now, could add pagination later
}

message ListCollectionsResponse {
  repeated CollectionInfo collections = 1;
}

message CollectionInfo {
  string name = 1;
  int32 document_count = 2;
  string created_at = 3;
  map<string, string> metadata = 4;
}

message DeleteCollectionRequest {
  string collection_name = 1;
}

message DeleteCollectionResponse {
  bool success = 1;
  string message = 2;
}
