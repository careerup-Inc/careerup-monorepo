// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: careerup/v1/ilo.proto

package careerupv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IloDomain represents one of the 5 domains assessed in the ILO test
type IloDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`               // LANG, LOGIC, DESIGN, PEOPLE, MECH
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // Ngôn ngữ, Phân tích - lôgic, etc.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // Optional description
}

func (x *IloDomain) Reset() {
	*x = IloDomain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IloDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IloDomain) ProtoMessage() {}

func (x *IloDomain) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IloDomain.ProtoReflect.Descriptor instead.
func (*IloDomain) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{0}
}

func (x *IloDomain) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *IloDomain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IloDomain) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// IloLevel represents the evaluation level for a domain score
type IloLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinPercent int32  `protobuf:"varint,1,opt,name=min_percent,json=minPercent,proto3" json:"min_percent,omitempty"`
	MaxPercent int32  `protobuf:"varint,2,opt,name=max_percent,json=maxPercent,proto3" json:"max_percent,omitempty"`
	LevelName  string `protobuf:"bytes,3,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"` // Rất mạnh, Mạnh, Trung bình, Yếu
	Suggestion string `protobuf:"bytes,4,opt,name=suggestion,proto3" json:"suggestion,omitempty"`                // Suggestion text for this level
}

func (x *IloLevel) Reset() {
	*x = IloLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IloLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IloLevel) ProtoMessage() {}

func (x *IloLevel) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IloLevel.ProtoReflect.Descriptor instead.
func (*IloLevel) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{1}
}

func (x *IloLevel) GetMinPercent() int32 {
	if x != nil {
		return x.MinPercent
	}
	return 0
}

func (x *IloLevel) GetMaxPercent() int32 {
	if x != nil {
		return x.MaxPercent
	}
	return 0
}

func (x *IloLevel) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *IloLevel) GetSuggestion() string {
	if x != nil {
		return x.Suggestion
	}
	return ""
}

// IloCareerSuggestion represents a career suggestion for a domain
type IloCareerSuggestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainCode  string `protobuf:"bytes,1,opt,name=domain_code,json=domainCode,proto3" json:"domain_code,omitempty"`    // Associated domain code
	CareerField string `protobuf:"bytes,2,opt,name=career_field,json=careerField,proto3" json:"career_field,omitempty"` // Career field name
}

func (x *IloCareerSuggestion) Reset() {
	*x = IloCareerSuggestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IloCareerSuggestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IloCareerSuggestion) ProtoMessage() {}

func (x *IloCareerSuggestion) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IloCareerSuggestion.ProtoReflect.Descriptor instead.
func (*IloCareerSuggestion) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{2}
}

func (x *IloCareerSuggestion) GetDomainCode() string {
	if x != nil {
		return x.DomainCode
	}
	return ""
}

func (x *IloCareerSuggestion) GetCareerField() string {
	if x != nil {
		return x.CareerField
	}
	return ""
}

// IloDomainScore represents a scored domain for a user
type IloDomainScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainCode string  `protobuf:"bytes,1,opt,name=domain_code,json=domainCode,proto3" json:"domain_code,omitempty"` // LANG, LOGIC, etc.
	RawScore   int32   `protobuf:"varint,2,opt,name=raw_score,json=rawScore,proto3" json:"raw_score,omitempty"`      // Raw score (sum of question scores)
	Percent    float32 `protobuf:"fixed32,3,opt,name=percent,proto3" json:"percent,omitempty"`                       // Percentage score (raw/48*100)
	Level      string  `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`                             // Evaluation level
	Rank       int32   `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`                              // Ranking (1-5)
}

func (x *IloDomainScore) Reset() {
	*x = IloDomainScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IloDomainScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IloDomainScore) ProtoMessage() {}

func (x *IloDomainScore) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IloDomainScore.ProtoReflect.Descriptor instead.
func (*IloDomainScore) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{3}
}

func (x *IloDomainScore) GetDomainCode() string {
	if x != nil {
		return x.DomainCode
	}
	return ""
}

func (x *IloDomainScore) GetRawScore() int32 {
	if x != nil {
		return x.RawScore
	}
	return 0
}

func (x *IloDomainScore) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *IloDomainScore) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *IloDomainScore) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// IloTestResult represents a user's complete ILO test result
type IloTestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResultData       string            `protobuf:"bytes,3,opt,name=result_data,json=resultData,proto3" json:"result_data,omitempty"` // Raw JSON data for backward compatibility
	CreatedAt        string            `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Scores           []*IloDomainScore `protobuf:"bytes,5,rep,name=scores,proto3" json:"scores,omitempty"`                                             // Structured scores by domain
	TopDomains       []string          `protobuf:"bytes,6,rep,name=top_domains,json=topDomains,proto3" json:"top_domains,omitempty"`                   // Top domain codes
	SuggestedCareers []string          `protobuf:"bytes,7,rep,name=suggested_careers,json=suggestedCareers,proto3" json:"suggested_careers,omitempty"` // List of suggested career fields
}

func (x *IloTestResult) Reset() {
	*x = IloTestResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IloTestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IloTestResult) ProtoMessage() {}

func (x *IloTestResult) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IloTestResult.ProtoReflect.Descriptor instead.
func (*IloTestResult) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{4}
}

func (x *IloTestResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IloTestResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IloTestResult) GetResultData() string {
	if x != nil {
		return x.ResultData
	}
	return ""
}

func (x *IloTestResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *IloTestResult) GetScores() []*IloDomainScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *IloTestResult) GetTopDomains() []string {
	if x != nil {
		return x.TopDomains
	}
	return nil
}

func (x *IloTestResult) GetSuggestedCareers() []string {
	if x != nil {
		return x.SuggestedCareers
	}
	return nil
}

// IloAnswer represents a single answer to an ILO test question
type IloAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId     string `protobuf:"bytes,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	QuestionNumber int32  `protobuf:"varint,2,opt,name=question_number,json=questionNumber,proto3" json:"question_number,omitempty"`
	SelectedOption int32  `protobuf:"varint,3,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"` // 1-4 representing the score
}

func (x *IloAnswer) Reset() {
	*x = IloAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IloAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IloAnswer) ProtoMessage() {}

func (x *IloAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IloAnswer.ProtoReflect.Descriptor instead.
func (*IloAnswer) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{5}
}

func (x *IloAnswer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *IloAnswer) GetQuestionNumber() int32 {
	if x != nil {
		return x.QuestionNumber
	}
	return 0
}

func (x *IloAnswer) GetSelectedOption() int32 {
	if x != nil {
		return x.SelectedOption
	}
	return 0
}

// Request to submit an ILO test result
type SubmitIloTestResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Answers       []*IloAnswer `protobuf:"bytes,2,rep,name=answers,proto3" json:"answers,omitempty"`
	RawResultData string       `protobuf:"bytes,3,opt,name=raw_result_data,json=rawResultData,proto3" json:"raw_result_data,omitempty"` // Optional raw data for backward compatibility
}

func (x *SubmitIloTestResultRequest) Reset() {
	*x = SubmitIloTestResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitIloTestResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitIloTestResultRequest) ProtoMessage() {}

func (x *SubmitIloTestResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitIloTestResultRequest.ProtoReflect.Descriptor instead.
func (*SubmitIloTestResultRequest) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitIloTestResultRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SubmitIloTestResultRequest) GetAnswers() []*IloAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *SubmitIloTestResultRequest) GetRawResultData() string {
	if x != nil {
		return x.RawResultData
	}
	return ""
}

// Response after submitting an ILO test result
type SubmitIloTestResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *IloTestResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SubmitIloTestResultResponse) Reset() {
	*x = SubmitIloTestResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitIloTestResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitIloTestResultResponse) ProtoMessage() {}

func (x *SubmitIloTestResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitIloTestResultResponse.ProtoReflect.Descriptor instead.
func (*SubmitIloTestResultResponse) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitIloTestResultResponse) GetResult() *IloTestResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// Request to get all ILO test results for a user
type GetIloTestResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetIloTestResultsRequest) Reset() {
	*x = GetIloTestResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIloTestResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIloTestResultsRequest) ProtoMessage() {}

func (x *GetIloTestResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIloTestResultsRequest.ProtoReflect.Descriptor instead.
func (*GetIloTestResultsRequest) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{8}
}

func (x *GetIloTestResultsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response with a list of ILO test results
type GetIloTestResultsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IloTestResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetIloTestResultsResponse) Reset() {
	*x = GetIloTestResultsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIloTestResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIloTestResultsResponse) ProtoMessage() {}

func (x *GetIloTestResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIloTestResultsResponse.ProtoReflect.Descriptor instead.
func (*GetIloTestResultsResponse) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{9}
}

func (x *GetIloTestResultsResponse) GetResults() []*IloTestResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// Request to get the ILO test (questions/structure)
type GetIloTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIloTestRequest) Reset() {
	*x = GetIloTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIloTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIloTestRequest) ProtoMessage() {}

func (x *GetIloTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIloTestRequest.ProtoReflect.Descriptor instead.
func (*GetIloTestRequest) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{10}
}

// ILO test question structure
type IloTestQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	QuestionNumber int32    `protobuf:"varint,2,opt,name=question_number,json=questionNumber,proto3" json:"question_number,omitempty"`
	Text           string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	DomainCode     string   `protobuf:"bytes,4,opt,name=domain_code,json=domainCode,proto3" json:"domain_code,omitempty"` // Associated domain code
	Options        []string `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *IloTestQuestion) Reset() {
	*x = IloTestQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IloTestQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IloTestQuestion) ProtoMessage() {}

func (x *IloTestQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IloTestQuestion.ProtoReflect.Descriptor instead.
func (*IloTestQuestion) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{11}
}

func (x *IloTestQuestion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IloTestQuestion) GetQuestionNumber() int32 {
	if x != nil {
		return x.QuestionNumber
	}
	return 0
}

func (x *IloTestQuestion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *IloTestQuestion) GetDomainCode() string {
	if x != nil {
		return x.DomainCode
	}
	return ""
}

func (x *IloTestQuestion) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

// ILO test structure (list of questions and domains)
type GetIloTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*IloTestQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	Domains   []*IloDomain       `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	Levels    []*IloLevel        `protobuf:"bytes,3,rep,name=levels,proto3" json:"levels,omitempty"`
}

func (x *GetIloTestResponse) Reset() {
	*x = GetIloTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIloTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIloTestResponse) ProtoMessage() {}

func (x *GetIloTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIloTestResponse.ProtoReflect.Descriptor instead.
func (*GetIloTestResponse) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{12}
}

func (x *GetIloTestResponse) GetQuestions() []*IloTestQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *GetIloTestResponse) GetDomains() []*IloDomain {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *GetIloTestResponse) GetLevels() []*IloLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

// Request to get available career suggestions
type GetIloCareerSuggestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainCodes []string `protobuf:"bytes,1,rep,name=domain_codes,json=domainCodes,proto3" json:"domain_codes,omitempty"` // Domain codes to get suggestions for
	Limit       int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                               // Maximum number of suggestions
}

func (x *GetIloCareerSuggestionsRequest) Reset() {
	*x = GetIloCareerSuggestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIloCareerSuggestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIloCareerSuggestionsRequest) ProtoMessage() {}

func (x *GetIloCareerSuggestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIloCareerSuggestionsRequest.ProtoReflect.Descriptor instead.
func (*GetIloCareerSuggestionsRequest) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{13}
}

func (x *GetIloCareerSuggestionsRequest) GetDomainCodes() []string {
	if x != nil {
		return x.DomainCodes
	}
	return nil
}

func (x *GetIloCareerSuggestionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response with career suggestions
type GetIloCareerSuggestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestions []*IloCareerSuggestion `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
}

func (x *GetIloCareerSuggestionsResponse) Reset() {
	*x = GetIloCareerSuggestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerup_v1_ilo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIloCareerSuggestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIloCareerSuggestionsResponse) ProtoMessage() {}

func (x *GetIloCareerSuggestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_careerup_v1_ilo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIloCareerSuggestionsResponse.ProtoReflect.Descriptor instead.
func (*GetIloCareerSuggestionsResponse) Descriptor() ([]byte, []int) {
	return file_careerup_v1_ilo_proto_rawDescGZIP(), []int{14}
}

func (x *GetIloCareerSuggestionsResponse) GetSuggestions() []*IloCareerSuggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

var File_careerup_v1_ilo_proto protoreflect.FileDescriptor

var file_careerup_v1_ilo_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6c,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75,
	0x70, 0x2e, 0x76, 0x31, 0x22, 0x55, 0x0a, 0x09, 0x49, 0x6c, 0x6f, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x08,
	0x49, 0x6c, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x69, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x13, 0x49, 0x6c, 0x6f,
	0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x49, 0x6c, 0x6f, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x61, 0x77,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0xfb, 0x01, 0x0a, 0x0d, 0x49, 0x6c,
	0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6c, 0x6f, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x70,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x6f, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x73, 0x22, 0x7e, 0x0a, 0x09, 0x49, 0x6c, 0x6f, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6c, 0x6f, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x51, 0x0a, 0x1b, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x33, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x51, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c,
	0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x49, 0x6c,
	0x6f, 0x54, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c,
	0x6f, 0x54, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c, 0x6f, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x72,
	0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c, 0x6f, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x22, 0x59, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x49, 0x6c, 0x6f, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x65, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x43, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c, 0x6f, 0x43, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x9f, 0x03, 0x0a, 0x0a,
	0x49, 0x6c, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x72,
	0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49,
	0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49,
	0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6c,
	0x6f, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6c, 0x6f, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6c, 0x6f, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb0, 0x01,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x76,
	0x31, 0x42, 0x08, 0x49, 0x6c, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72,
	0x75, 0x70, 0x2d, 0x49, 0x6e, 0x63, 0x2f, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2d,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x75, 0x70, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x43, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x43, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x75, 0x70, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72,
	0x75, 0x70, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0c, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x75, 0x70, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_careerup_v1_ilo_proto_rawDescOnce sync.Once
	file_careerup_v1_ilo_proto_rawDescData = file_careerup_v1_ilo_proto_rawDesc
)

func file_careerup_v1_ilo_proto_rawDescGZIP() []byte {
	file_careerup_v1_ilo_proto_rawDescOnce.Do(func() {
		file_careerup_v1_ilo_proto_rawDescData = protoimpl.X.CompressGZIP(file_careerup_v1_ilo_proto_rawDescData)
	})
	return file_careerup_v1_ilo_proto_rawDescData
}

var file_careerup_v1_ilo_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_careerup_v1_ilo_proto_goTypes = []interface{}{
	(*IloDomain)(nil),                       // 0: careerup.v1.IloDomain
	(*IloLevel)(nil),                        // 1: careerup.v1.IloLevel
	(*IloCareerSuggestion)(nil),             // 2: careerup.v1.IloCareerSuggestion
	(*IloDomainScore)(nil),                  // 3: careerup.v1.IloDomainScore
	(*IloTestResult)(nil),                   // 4: careerup.v1.IloTestResult
	(*IloAnswer)(nil),                       // 5: careerup.v1.IloAnswer
	(*SubmitIloTestResultRequest)(nil),      // 6: careerup.v1.SubmitIloTestResultRequest
	(*SubmitIloTestResultResponse)(nil),     // 7: careerup.v1.SubmitIloTestResultResponse
	(*GetIloTestResultsRequest)(nil),        // 8: careerup.v1.GetIloTestResultsRequest
	(*GetIloTestResultsResponse)(nil),       // 9: careerup.v1.GetIloTestResultsResponse
	(*GetIloTestRequest)(nil),               // 10: careerup.v1.GetIloTestRequest
	(*IloTestQuestion)(nil),                 // 11: careerup.v1.IloTestQuestion
	(*GetIloTestResponse)(nil),              // 12: careerup.v1.GetIloTestResponse
	(*GetIloCareerSuggestionsRequest)(nil),  // 13: careerup.v1.GetIloCareerSuggestionsRequest
	(*GetIloCareerSuggestionsResponse)(nil), // 14: careerup.v1.GetIloCareerSuggestionsResponse
}
var file_careerup_v1_ilo_proto_depIdxs = []int32{
	3,  // 0: careerup.v1.IloTestResult.scores:type_name -> careerup.v1.IloDomainScore
	5,  // 1: careerup.v1.SubmitIloTestResultRequest.answers:type_name -> careerup.v1.IloAnswer
	4,  // 2: careerup.v1.SubmitIloTestResultResponse.result:type_name -> careerup.v1.IloTestResult
	4,  // 3: careerup.v1.GetIloTestResultsResponse.results:type_name -> careerup.v1.IloTestResult
	11, // 4: careerup.v1.GetIloTestResponse.questions:type_name -> careerup.v1.IloTestQuestion
	0,  // 5: careerup.v1.GetIloTestResponse.domains:type_name -> careerup.v1.IloDomain
	1,  // 6: careerup.v1.GetIloTestResponse.levels:type_name -> careerup.v1.IloLevel
	2,  // 7: careerup.v1.GetIloCareerSuggestionsResponse.suggestions:type_name -> careerup.v1.IloCareerSuggestion
	6,  // 8: careerup.v1.IloService.SubmitIloTestResult:input_type -> careerup.v1.SubmitIloTestResultRequest
	8,  // 9: careerup.v1.IloService.GetIloTestResults:input_type -> careerup.v1.GetIloTestResultsRequest
	10, // 10: careerup.v1.IloService.GetIloTest:input_type -> careerup.v1.GetIloTestRequest
	13, // 11: careerup.v1.IloService.GetIloCareerSuggestions:input_type -> careerup.v1.GetIloCareerSuggestionsRequest
	7,  // 12: careerup.v1.IloService.SubmitIloTestResult:output_type -> careerup.v1.SubmitIloTestResultResponse
	9,  // 13: careerup.v1.IloService.GetIloTestResults:output_type -> careerup.v1.GetIloTestResultsResponse
	12, // 14: careerup.v1.IloService.GetIloTest:output_type -> careerup.v1.GetIloTestResponse
	14, // 15: careerup.v1.IloService.GetIloCareerSuggestions:output_type -> careerup.v1.GetIloCareerSuggestionsResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_careerup_v1_ilo_proto_init() }
func file_careerup_v1_ilo_proto_init() {
	if File_careerup_v1_ilo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_careerup_v1_ilo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IloDomain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IloLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IloCareerSuggestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IloDomainScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IloTestResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IloAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitIloTestResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitIloTestResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIloTestResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIloTestResultsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIloTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IloTestQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIloTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIloCareerSuggestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerup_v1_ilo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIloCareerSuggestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_careerup_v1_ilo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_careerup_v1_ilo_proto_goTypes,
		DependencyIndexes: file_careerup_v1_ilo_proto_depIdxs,
		MessageInfos:      file_careerup_v1_ilo_proto_msgTypes,
	}.Build()
	File_careerup_v1_ilo_proto = out.File
	file_careerup_v1_ilo_proto_rawDesc = nil
	file_careerup_v1_ilo_proto_goTypes = nil
	file_careerup_v1_ilo_proto_depIdxs = nil
}
